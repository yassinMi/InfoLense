<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InfoLense"
                     xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:custom="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:Converters="clr-namespace:Converters" x:Name="window" x:Class="InfoLense.MainWindow"
        mc:Ignorable="d"
        Title="Info Lense" Height="350" Width="525" AllowsTransparency="True" WindowStyle="None" Background="Transparent" Topmost="True" UseLayoutRounding="True">
    <Window.Resources>
        <Converters:EnumToDynamicStyle x:Key="EnumToDynamicStyle"/>
        <Style x:Key="ThumbStyle1" TargetType="{x:Type Thumb}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="MouseEnter_BeginStoryboard">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.56"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="MouseExit_BeginStoryboard">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.56"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.56"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ResizeGripperForeground" EndPoint="1,0.75" StartPoint="0,0.25">
            <GradientStop Color="#FFFFFF" Offset="0.3"/>
            <GradientStop Color="#BBC5D7" Offset="0.75"/>
            <GradientStop Color="#6D83A9" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="ResizeGripStyle1" TargetType="{x:Type Thumb}">
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid  Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Path  Data="M 9,0 L 11,0 L 11,11 L 0,11 L 0,9 L 3,9 L 3,6 L 6,6 L 6,3 L 9,3 z" HorizontalAlignment="Right" Margin="0,0,2,2" VerticalAlignment="Bottom">
                                <Path.Fill>
                                    <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <GeometryDrawing Brush="{DynamicResource ResizeGripperForeground}" Geometry="M 0,0 L 2,0 L 2,2 L 0,2 z "/>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
         </Window.Resources>
    <Grid x:Name="host" >
        <Grid.RowDefinitions>
            <RowDefinition x:Name="r0" Height="100*"/>
            <RowDefinition x:Name="r1" Height="100*"/>
            <RowDefinition x:Name="r2" Height="100*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="c0" Width="100*"/>
            <ColumnDefinition x:Name="c1" Width="100*"/>
            <ColumnDefinition x:Name="c2" Width="100*"/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="top" Background="{Binding CoverBrush, ElementName=window}" MouseLeftButtonDown="Grid_MouseLeftButtonDown" Grid.ColumnSpan="2" Grid.Column="1"/>
        <Thumb   x:Name="topSplitter"  Height="{Binding SplitterThickness, FallbackValue=8}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="1"   Cursor="SizeNS" Style="{Binding SplittersStyle, ConverterParameter=GridSplitterStyleDots\,GridSplitterStyleArea\,GridSplitterStyleLines, Converter={StaticResource EnumToDynamicStyle}}"/>
        <Grid x:Name="left" Background="{Binding CoverBrush, ElementName=window}" MouseLeftButtonDown="Grid_MouseLeftButtonDown" Grid.RowSpan="2"/>
        <Grid x:Name="right" Background="{Binding CoverBrush, ElementName=window}" MouseLeftButtonDown="Grid_MouseLeftButtonDown" Grid.Row="1" Grid.Column="2" Grid.RowSpan="2"/>
        <Grid x:Name="bottom" Background="{Binding CoverBrush, ElementName=window}" MouseLeftButtonDown="Grid_MouseLeftButtonDown" Grid.Row="2" Grid.ColumnSpan="2"/>
        <Thumb Style="{Binding SplittersStyle, ConverterParameter=GridSplitterStyleDots\,GridSplitterStyleArea\,GridSplitterStyleLines, Converter={StaticResource EnumToDynamicStyle}}" x:Name="RightSplitter" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="2" Width="{Binding SplitterThickness, FallbackValue=8}" Cursor="SizeWE"/>
        <Thumb Style="{Binding SplittersStyle, ConverterParameter=GridSplitterStyleDots\,GridSplitterStyleArea\,GridSplitterStyleLines, Converter={StaticResource EnumToDynamicStyle}}" x:Name="LeftSplitter" Grid.Row="1"   Width="{Binding SplitterThickness, FallbackValue=8}" HorizontalAlignment="Right" Cursor="SizeWE"/>

        <materialDesign:PopupBox materialDesign:ShadowAssist.ShadowDepth="Depth3" PopupUniformCornerRadius="0" StaysOpen="True" Padding="0" PopupMode="Click"  PopupVerticalOffset="-24" PopupHorizontalOffset="-24" PlacementMode="TopAndAlignCentres" UnfurlOrientation="Horizontal" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Style="{DynamicResource PopupBoxStyle1}" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.RowSpan="3" Background="{DynamicResource MaterialDesignPaper}" Grid.ColumnSpan="3" Margin="0,6,6,0" Closed="PopupBox_Closed"  >
            <materialDesign:PopupBox.ToggleContent  >
                <materialDesign:Ripple x:Name="ripple"  Feedback="{DynamicResource PrimaryHueMidBrush}">
                    <custom:PackIconMaterial Width="16" Height="16" Margin="8" Kind="Cog" Foreground="White" Background="#00000000" >
                        <custom:PackIconMaterial.Style>
                            <Style TargetType="{x:Type custom:PackIconMaterial}">
                                <Setter Property="Opacity" Value="0.40" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </custom:PackIconMaterial.Style>
                    </custom:PackIconMaterial>
                </materialDesign:Ripple>
            </materialDesign:PopupBox.ToggleContent>
            <local:SettingsView  Margin="10" Width="280" />
            <!--materialDesign:Card Margin="24" Background="{DynamicResource MaterialDesignPaper}" UniformCornerRadius="0" BorderThickness="0" materialDesign:ShadowAssist.ShadowDepth="Depth3" Grid.RowSpan="3" Grid.ColumnSpan="3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" Padding="8">
                
            </-->

        </materialDesign:PopupBox>

        <Thumb x:Name="gapThumb" Grid.Column="2" VerticalAlignment="Bottom" HorizontalAlignment="Left" Foreground="White" Width="24" Height="24" Cursor="SizeAll" Background="#00F0F0F0" Visibility="Hidden">
            <Thumb.Template>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="#00000000">
                        <custom:PackIconMaterial Foreground="{TemplateBinding Foreground}" Kind="TextureBox" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                    </Grid>
                </ControlTemplate>
            </Thumb.Template>
        </Thumb>
        <Thumb Style="{Binding SplittersStyle, ConverterParameter=GridSplitterStyleDots\,GridSplitterStyleArea\,GridSplitterStyleLines, Converter={StaticResource EnumToDynamicStyle}}" x:Name="bottomSplitter" HorizontalAlignment="Stretch" Height="{Binding SplitterThickness, FallbackValue=8}" Grid.Row="2" Grid.Column="1"  VerticalAlignment="Top" Cursor="SizeNS"/>
        <!--GridSplitter  Style="{x:Null}" x:Name="hoeizontalSplitter_slider" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" HorizontalAlignment="Left" Grid.Column="1" Cursor="Hand" Background="#00F0F0F0" Width="20" Grid.Row="1" Margin="-24,0,0,0"/-->
        <Thumb x:Name="resizeGrip" Grid.Row="1" Grid.Column="1" Style="{DynamicResource ResizeGripStyle1}" Background="#02000000" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,-4,-4" Cursor="SizeNWSE"/>
        <Thumb  x:Name="handle"  Height="18" HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Column="1" Cursor="SizeAll"   Foreground="#FFEA2828" Grid.Row="1" Margin="0,-28,0,0" DragDelta="handle_DragDelta" DragStarted="handle_DragStarted" Opacity="0.5">
            <Thumb.Style>
                <Style BasedOn="{StaticResource ThumbStyle1}" TargetType="Thumb">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HandleStyle}" Value="Dots">
                            <Setter Property="Background" Value="{DynamicResource fromGrip}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HandleStyle}" Value="Lines">
                            <Setter Property="Background" Value="{DynamicResource MiLines}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HandleStyle}" Value="Area">
                            <Setter Property="Background" Value="#20e0e0e0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Thumb.Style>
        </Thumb>

    </Grid>
</Window>
