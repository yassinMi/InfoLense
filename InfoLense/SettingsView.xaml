<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:InfoLense" 
              xmlns:custom="http://metro.mahapps.com/winfx/xaml/iconpacks"
            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
            xmlns:Converters="clr-namespace:Converters" x:Class="InfoLense.SettingsView"
             mc:Ignorable="d"
            TextElement.FontWeight="Regular"
            TextElement.FontSize="13"
            TextOptions.TextFormattingMode="Display" 
            TextOptions.TextRenderingMode="Auto"
            FontFamily="Roboto"
            SnapsToDevicePixels="True"
             Background="{DynamicResource MaterialDesignPaper}"
             Foreground="{DynamicResource MaterialDesignBody}"
            UseLayoutRounding="True"
             d:DesignHeight="490" d:DesignWidth="300">
    <UserControl.Resources>
        <Converters:RadioValueToIsCheckedConverter x:Key="RadioValueToIsCheckedConverter"/>
        <ControlTemplate x:Key="RadioButtonChipStyleFillTypePicker" TargetType="{x:Type RadioButton}">
            <Grid ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                <VisualTransition.GeneratedEasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </VisualTransition.GeneratedEasingFunction>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                                    <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="CheckedUnfocused">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                                    <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                                <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="CheckedUnfocused">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                                <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" CornerRadius="16"/>
                <Border x:Name="MouseOverBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="16" Opacity="0"/>
                <Border x:Name="SelectedBackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="16" Opacity="0"/>
                <ContentControl x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentTemplateSelector}" HorizontalAlignment="Center" IsTabStop="False" Margin="10,0" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="RadioButtonFillPickerStyle" TargetType="{x:Type RadioButton}">
            <Grid ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                <VisualTransition.GeneratedEasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </VisualTransition.GeneratedEasingFunction>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0.8" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="CheckedUnfocused">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="CheckedUnfocused">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="MouseOverBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="16" Opacity="0"/>
                <Border x:Name="SelectedBackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="16" Opacity="0"/>
                <ContentControl x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentTemplateSelector}" HorizontalAlignment="Center" IsTabStop="False" Margin="10,0" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid>
        <StackPanel TextBlock.Foreground="{DynamicResource MaterialDesignBodyLight}" Grid.IsSharedSizeScope="True">
            <TextBlock FontSize="14" Foreground="{DynamicResource MaterialDesignBody}" Text="Settings" VerticalAlignment="Center" Margin="6,10" />
            <Grid Margin="0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="key" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Opacity" VerticalAlignment="Center" Margin="6,0" />
                <Slider x:Name="opacitySlider" Grid.Column="1" Minimum="5"  Maximum="100" Value="{Binding Opacity}" ValueChanged="Slider_ValueChanged" Foreground="#FFC1C1C1" />
            </Grid>
            <Separator Margin="6,2" Opacity="0.5"/>
            <Grid Margin="0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="key" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Color" VerticalAlignment="Top" Margin="6,0" />
                <materialDesign:ColorPicker x:Name="colorPicker" Color="#FF172530" Grid.Column="1" Height="100"  />
            </Grid>
            <Separator Margin="6,2" Opacity="0.5"/>
            <Grid x:Name="spltterThickness" Margin="0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="key" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Border Thickness" VerticalAlignment="Center" Margin="6,0" />
                <Slider Grid.Column="1" 
					Value="{Binding SplitterThickness}"
					Minimum="4"
					Maximum="36"
					Style="{StaticResource MaterialDesignDiscreteSlider}"
					TickFrequency="4"
					TickPlacement="BottomRight" Foreground="#FFC1C1C1" />
            </Grid>
            <Separator Margin="6,2" Opacity="0.5"/>
            <Grid x:Name="borderStyle" Margin="0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="key" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Border Style" VerticalAlignment="Center" Margin="6,0" />
                <StackPanel  Orientation="Horizontal" Grid.Column="1">
                    <RadioButton x:Name="RadioItemborderStyleDots"   Style="{StaticResource MaterialDesignChoiceChipPrimaryOutlineRadioButton}" IsChecked="{Binding SplittersStyle, ConverterParameter=Dots, Converter={StaticResource RadioValueToIsCheckedConverter}}" GroupName="borderStyleChoice" Foreground="#FFC70000" Background="#00CF10C6" BorderBrush="White" Template="{DynamicResource RadioButtonFillPickerStyle}"  >
                        <Border  Width="16" Height="16" Background="{DynamicResource MiBrush}" />
                    </RadioButton>
                    <RadioButton x:Name="RadioItemborderStyleArea" Style="{StaticResource MaterialDesignChoiceChipPrimaryOutlineRadioButton}" GroupName="borderStyleChoice" Template="{DynamicResource RadioButtonFillPickerStyle}" BorderBrush="White" Background="#00D0D1D2" Foreground="#FFDA0000" IsChecked="{Binding SplittersStyle, ConverterParameter=Area, Converter={StaticResource RadioValueToIsCheckedConverter}}" >
                        <Border  Width="16" Height="16" Background="#19E4E4E4" />
                    </RadioButton>
                    <RadioButton x:Name="RadioItemborderStyleLines" Style="{StaticResource MaterialDesignChoiceChipPrimaryOutlineRadioButton}" GroupName="borderStyleChoice" Template="{DynamicResource RadioButtonFillPickerStyle}" BorderBrush="White" Background="#00D0D1D2" IsChecked="{Binding SplittersStyle, ConverterParameter=Lines, Converter={StaticResource RadioValueToIsCheckedConverter}}" >
                        <Border  Width="16" Height="16" Background="{DynamicResource MiLines}" />
                    </RadioButton>
                </StackPanel>
            </Grid>
            <Grid x:Name="borderStyle_Copy" Margin="0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="key" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Head Style" VerticalAlignment="Center" Margin="6,0" />
                <StackPanel  Orientation="Horizontal" Grid.Column="1">
                    <RadioButton x:Name="RadioItemborderStyleDots1"   Style="{StaticResource MaterialDesignChoiceChipPrimaryOutlineRadioButton}" IsChecked="{Binding HandleStyle, ConverterParameter=Dots, Converter={StaticResource RadioValueToIsCheckedConverter}}" GroupName="handleStyleChoice" Foreground="#FFC70000" Background="#00CF10C6" BorderBrush="White" Template="{DynamicResource RadioButtonFillPickerStyle}"  >
                        <Border  Width="16" Height="16" Background="{DynamicResource MiBrush}" />
                    </RadioButton>
                    <RadioButton x:Name="RadioItemborderStyleArea1" Style="{StaticResource MaterialDesignChoiceChipPrimaryOutlineRadioButton}" GroupName="handleStyleChoice" Template="{DynamicResource RadioButtonFillPickerStyle}" BorderBrush="White" Background="#00D0D1D2" Foreground="#FFDA0000" IsChecked="{Binding HandleStyle, ConverterParameter=Area, Converter={StaticResource RadioValueToIsCheckedConverter}}" >
                        <Border  Width="16" Height="16" Background="#19E4E4E4" />
                    </RadioButton>
                    <RadioButton x:Name="RadioItemborderStyleLines1" Style="{StaticResource MaterialDesignChoiceChipPrimaryOutlineRadioButton}" GroupName="handleStyleChoice" Template="{DynamicResource RadioButtonFillPickerStyle}" BorderBrush="White" Background="#00D0D1D2" IsChecked="{Binding HandleStyle, ConverterParameter=Lines, Converter={StaticResource RadioValueToIsCheckedConverter}}" >
                        <Border  Width="16" Height="16" Background="{DynamicResource MiLines}" />
                    </RadioButton>
                </StackPanel>
            </Grid>
            <Grid x:Name="startPosition" Margin="0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="key" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Start Position" VerticalAlignment="Top" Margin="6,0" />
                <StackPanel Grid.Column="1" Orientation="Vertical">
                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <Label Width="28" VerticalAlignment="Center" Content="X"/>
                        <TextBox Width="40" VerticalAlignment="Center" Text="{Binding c0Width}"/>
                        <Label Margin="16 0 0 0" Width="28" VerticalAlignment="Center" Content="Y"/>
                        <TextBox Width="40" VerticalAlignment="Center" Text="{Binding r0Height}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <Label Width="28" VerticalAlignment="Center" Content="W"/>
                        <TextBox Width="40" VerticalAlignment="Center" Text="{Binding c1Width}"/>
                        <Label Margin="16 0 0 0" Width="28" VerticalAlignment="Center" Content="H"/>
                        <TextBox Width="40" VerticalAlignment="Center" Text="{Binding r1Height}"/>
                    </StackPanel>
                </StackPanel>

            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
